[{"C:\\Users\\YeongHyeon\\study_projects\\todo-list\\src\\index.js":"1","C:\\Users\\YeongHyeon\\study_projects\\todo-list\\src\\fbase.js":"2","C:\\Users\\YeongHyeon\\study_projects\\todo-list\\src\\Login.js":"3","C:\\Users\\YeongHyeon\\study_projects\\todo-list\\src\\App.styles.js":"4","C:\\Users\\YeongHyeon\\study_projects\\todo-list\\src\\Main.styles.js":"5","C:\\Users\\YeongHyeon\\study_projects\\todo-list\\src\\ModalConfirm.js":"6","C:\\Users\\YeongHyeon\\study_projects\\todo-list\\src\\Main.js":"7","C:\\Users\\YeongHyeon\\study_projects\\todo-list\\src\\Login.styles.js":"8","C:\\Users\\YeongHyeon\\study_projects\\todo-list\\src\\App.js":"9"},{"size":230,"mtime":1612313742416,"results":"10","hashOfConfig":"11"},{"size":689,"mtime":1612313742413,"results":"12","hashOfConfig":"11"},{"size":3669,"mtime":1612313742411,"results":"13","hashOfConfig":"11"},{"size":1327,"mtime":1612767388825,"results":"14","hashOfConfig":"11"},{"size":5500,"mtime":1612327515795,"results":"15","hashOfConfig":"11"},{"size":915,"mtime":1612313742413,"results":"16","hashOfConfig":"11"},{"size":8003,"mtime":1612327797366,"results":"17","hashOfConfig":"11"},{"size":3110,"mtime":1612313742411,"results":"18","hashOfConfig":"11"},{"size":1895,"mtime":1612325094952,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"19sci56",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\YeongHyeon\\study_projects\\todo-list\\src\\index.js",[],["41","42"],"C:\\Users\\YeongHyeon\\study_projects\\todo-list\\src\\fbase.js",[],["43","44"],"C:\\Users\\YeongHyeon\\study_projects\\todo-list\\src\\Login.js",[],"C:\\Users\\YeongHyeon\\study_projects\\todo-list\\src\\App.styles.js",[],"C:\\Users\\YeongHyeon\\study_projects\\todo-list\\src\\Main.styles.js",["45","46","47"],"C:\\Users\\YeongHyeon\\study_projects\\todo-list\\src\\ModalConfirm.js",[],"C:\\Users\\YeongHyeon\\study_projects\\todo-list\\src\\Main.js",["48","49"],"import React, { useState, useEffect, useCallback } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport { ReactComponent as CheckIconSvg } from \"./images/check(white).svg\";\r\nimport { ReactComponent as TrashIconSvg } from \"./images/trash(white).svg\";\r\nimport { ReactComponent as GoogleIconSvg } from \"./images/google-plus-g-brands.svg\";\r\nimport { ReactComponent as GithubIconSvg } from \"./images/github-brands.svg\";\r\nimport { ReactComponent as EmailSvg } from \"./images/email.svg\";\r\nimport {\r\n  LeftWrapper,\r\n  InputNewToDo,\r\n  ToDoListWrapper,\r\n  ToDoList,\r\n  ToDoItem,\r\n  ToDoItemText,\r\n  CheckIcon,\r\n  TrashIcon,\r\n  ScrollBarBg,\r\n  ScrollBarActive,\r\n  RightWrapper,\r\n  InputTitle,\r\n  LogoutBtn,\r\n  Title,\r\n  Content,\r\n  ConfirmBtn,\r\n  CancelBtn,\r\n  WelcomeMsg,\r\n  QuillWrapper,\r\n  IconWrapper,\r\n} from \"./Main.styles\";\r\nimport { authService, dbService } from \"./fbase\";\r\n\r\nconst Main = (props) => {\r\n  const { userObj, todos, openConfirm, closeConfirm } = props;\r\n  const [isVisibleScroll, setIsVisibleScroll] = useState(false);\r\n  const [activeScrollTop, setActiveScrollTop] = useState(0);\r\n  const [activeScrollHeight, setActiveScrollHeight] = useState(0);\r\n  const [newToDo, setNewToDo] = useState(\"\");\r\n  const [prevState, setPrevState] = useState({});\r\n  const [scroll, setScroll] = useState(0);\r\n  const [state, setState] = useState({});\r\n  const [addNew, setAddNew] = useState(false);\r\n  const [toDoList, setToDoList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setActiveScrollTop(`${parseFloat((scroll * 360) / toDoList.length)}px`);\r\n  }, [scroll, toDoList]);\r\n  const _handleToggle = (id) => {\r\n    todos\r\n      .doc(id)\r\n      .get()\r\n      .then(function (doc) {\r\n        if (doc.exists) {\r\n          return doc.ref.update({ isDone: !doc.data().isDone });\r\n        } else {\r\n          console.error(\"not exists!\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const _handleToDo = useCallback(\r\n    (id) => {\r\n      const filteredList = toDoList.filter((v) => v.id === id);\r\n      const title = filteredList[0]?.title;\r\n      const content = filteredList[0]?.content;\r\n      if (document.querySelector(\".ql-editor\")) {\r\n        document.querySelector(\".ql-editor\").innerHTML = content;\r\n      }\r\n      setState({\r\n        id: filteredList[0]?.id,\r\n        title,\r\n        content,\r\n      });\r\n      setPrevState({\r\n        id: filteredList[0]?.id,\r\n        title,\r\n        content,\r\n      });\r\n    },\r\n    [toDoList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (todos && userObj) {\r\n      todos.where(\"uid\", \"==\", userObj.uid).onSnapshot((snapshot) => {\r\n        const toDoList = snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setToDoList(\r\n          toDoList.sort(\r\n            (a, b) =>\r\n              Math.max(b.created_at, b.updated_at || null) -\r\n              Math.max(a.created_at, a.updated_at || null)\r\n          )\r\n        );\r\n      });\r\n    }\r\n  }, [todos, userObj]);\r\n  useEffect(() => {\r\n    if (addNew) {\r\n      _handleToDo(toDoList[0].id);\r\n      setAddNew(false);\r\n    }\r\n    if (toDoList.filter((v) => v.id === state.id).length === 0) {\r\n      setState({});\r\n      setPrevState({});\r\n    }\r\n    if (toDoList.length > 10) {\r\n      setIsVisibleScroll(true);\r\n    } else {\r\n      setIsVisibleScroll(false);\r\n    }\r\n    setActiveScrollHeight(`${Math.ceil((10 / toDoList.length) * 360)}px`);\r\n  }, [toDoList]);\r\n\r\n  const _handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setState((prevState) => Object.assign({}, prevState, { [name]: value }));\r\n  };\r\n\r\n  const _handleSave = () => {\r\n    const { id, title, content } = state;\r\n    if (prevState.title !== title || prevState.content !== content) {\r\n      dbService.doc(`todos/${id}`).update({\r\n        title,\r\n        content,\r\n        updated_at: new Date(),\r\n      });\r\n    }\r\n  };\r\n  const _handleChangeContent = (content) => {\r\n    setState((prevState) => Object.assign({}, prevState, { content }));\r\n  };\r\n\r\n  const _handleRemove = async (id) => {\r\n    const _handleOk = () => {\r\n      dbService.doc(`todos/${id}`).delete();\r\n      closeConfirm();\r\n    };\r\n    openConfirm(\r\n      <>\r\n        <Title>메모 삭제</Title>\r\n        <Content>선택한 메모를 삭제 하시겠습니까?</Content>\r\n        <ConfirmBtn onClick={() => _handleOk()}>삭제</ConfirmBtn>\r\n        <CancelBtn onClick={() => closeConfirm()}>취소</CancelBtn>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const _handleWheel = (e) => {\r\n    if (e.deltaY > 0) {\r\n      // down\r\n      if (scroll + 10 < toDoList.length) {\r\n        setScroll((prev) => prev + 1);\r\n      }\r\n    } else {\r\n      // up\r\n      if (scroll > 0) {\r\n        setScroll((prev) => prev - 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const _handleNewToDo = (e) => {\r\n    if (e.keyCode === 13) {\r\n      todos.add({\r\n        title: newToDo,\r\n        content: \"\",\r\n        created_at: new Date(),\r\n        inDone: false,\r\n        uid: userObj.uid,\r\n      });\r\n      setNewToDo(\"\");\r\n      setAddNew(true);\r\n    }\r\n  };\r\n\r\n  const _setIcon = () => {\r\n    console.log(\"userObj\", userObj);\r\n    const { signinBy } = userObj;\r\n    if (signinBy === \"github.com\") {\r\n      return <GoogleIconSvg />;\r\n    }\r\n    if (signinBy === \"google.com\") {\r\n      return <GithubIconSvg />;\r\n    }\r\n    if (signinBy === \"password\") {\r\n    }\r\n  };\r\n\r\n  const { id, title, content } = state;\r\n  const { signinBy } = userObj;\r\n  return (\r\n    <>\r\n      <LeftWrapper>\r\n        <WelcomeMsg>\r\n          {signinBy === \"github.com\" && (\r\n            <IconWrapper color=\"#211f1f\">\r\n              <GithubIconSvg />\r\n            </IconWrapper>\r\n          )}\r\n          {signinBy === \"google.com\" && (\r\n            <IconWrapper color=\"#db4a39\">\r\n              <GoogleIconSvg />\r\n            </IconWrapper>\r\n          )}\r\n          {signinBy === \"password\" && (\r\n            <IconWrapper color=\"#000\">\r\n              <EmailSvg />\r\n            </IconWrapper>\r\n          )}\r\n          {`Welcome ${userObj.displayName || \"\"}`}\r\n        </WelcomeMsg>\r\n        <InputNewToDo\r\n          value={newToDo}\r\n          onChange={(e) => setNewToDo(e.target.value)}\r\n          onKeyUp={_handleNewToDo}\r\n          placeholder=\"Write a to do\"\r\n        />\r\n        <ToDoListWrapper>\r\n          <ToDoList onWheel={_handleWheel} scroll={scroll}>\r\n            {toDoList.map((todo) => (\r\n              <ToDoItem key={todo.id}>\r\n                <ToDoItemText\r\n                  onClick={() => _handleToDo(todo.id)}\r\n                  className={`${todo.isDone ? \"is_done\" : \"\"}`}\r\n                >\r\n                  {todo.title}\r\n                </ToDoItemText>\r\n                <CheckIcon\r\n                  checked={todo.isDone}\r\n                  onClick={() => _handleToggle(todo.id)}\r\n                >\r\n                  <CheckIconSvg />\r\n                  {/* <img src={checkIcon} alt=\"check_icon\" /> */}\r\n                </CheckIcon>\r\n                <TrashIcon onClick={() => _handleRemove(todo.id)}>\r\n                  <TrashIconSvg />\r\n                </TrashIcon>\r\n              </ToDoItem>\r\n            ))}\r\n          </ToDoList>\r\n          <ScrollBarBg isVisibleScroll={isVisibleScroll} />\r\n          <ScrollBarActive\r\n            activeScrollTop={activeScrollTop}\r\n            activeScrollHeight={activeScrollHeight}\r\n            isVisibleScroll={isVisibleScroll}\r\n          />\r\n        </ToDoListWrapper>\r\n        <LogoutBtn onClick={() => authService.signOut()}>Log out</LogoutBtn>\r\n      </LeftWrapper>\r\n      {id && (\r\n        <RightWrapper>\r\n          <InputTitle\r\n            value={title}\r\n            name=\"title\"\r\n            onChange={_handleChange}\r\n            onBlur={_handleSave}\r\n          />\r\n          <QuillWrapper onBlur={_handleSave}>\r\n            <ReactQuill\r\n              value={content}\r\n              onChange={_handleChangeContent}\r\n              theme=\"snow\"\r\n              modules={{ toolbar: false }}\r\n              className=\"quill\"\r\n            />\r\n          </QuillWrapper>\r\n        </RightWrapper>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","C:\\Users\\YeongHyeon\\study_projects\\todo-list\\src\\Login.styles.js",[],"C:\\Users\\YeongHyeon\\study_projects\\todo-list\\src\\App.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"50","replacedBy":"54"},{"ruleId":"52","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":32,"column":7,"nodeType":"58","messageId":"59","endLine":32,"endColumn":12},{"ruleId":"56","severity":1,"message":"60","line":43,"column":7,"nodeType":"58","messageId":"59","endLine":43,"endColumn":11},{"ruleId":"56","severity":1,"message":"61","line":46,"column":7,"nodeType":"58","messageId":"59","endLine":46,"endColumn":13},{"ruleId":"62","severity":1,"message":"63","line":114,"column":6,"nodeType":"64","endLine":114,"endColumn":16,"suggestions":"65"},{"ruleId":"56","severity":1,"message":"66","line":178,"column":9,"nodeType":"58","messageId":"59","endLine":178,"endColumn":17},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],["67"],["68"],"no-unused-vars","'Clock' is assigned a value but never used.","Identifier","unusedVar","'Time' is assigned a value but never used.","'Colone' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_handleToDo', 'addNew', and 'state.id'. Either include them or remove the dependency array.","ArrayExpression",["69"],"'_setIcon' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [_handleToDo, addNew, state.id, toDoList]",{"range":"72","text":"73"},[3367,3377],"[_handleToDo, addNew, state.id, toDoList]"]